{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tabs"
  ],
  "files": [
    {
      "path": "ui/tabs.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { VariantProps, cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst tabListVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default:\n        \"items-center justify-center rounded-xl bg-gradient-to-b from-gray-1 to-gray-a2 py-[3px] px-[3px] text-muted-foreground shadow-[inset_0_0_1px_1px_var(--gray-a2),inset_0_0_6px_1px_var(--gray-a1),inset_0_-6px_6px_-7px_var(--gray-a2),inset_0_-1px_1px_0px_var(--gray-a2),inset_0_6px_9px_-2px_var(--gray-1)]\",\n      chrome:\n        \"relative h-9 gap-0.5 overflow-hidden rounded-lg bg-gray-a1 p-0.5 text-xs uppercase tracking-widest text-muted-foreground opacity-50 shadow-[inset_0px_-3px_3px_0px_var(--gray-a2),0_0_1px_1px_var(--gray-a5),inset_0_0_0_1px_var(--gray-1)] transition-none after:absolute after:inset-0 after:z-[1] after:mx-auto after:size-8 after:translate-y-1/2 after:rounded-full after:bg-gray-1 after:blur-lg\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nconst tabTriggerVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default:\n        \"inline-flex items-center justify-center overflow-hidden whitespace-nowrap rounded-lg px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-gray-3 data-[state=active]:text-foreground data-[state=active]:shadow-[inset_0_0_1px_1px_var(--gray-a2)]\",\n      chrome:\n        \"relative h-8 overflow-hidden rounded-md px-4 py-1 text-xs uppercase tracking-widest text-muted-foreground opacity-50 transition-none after:absolute after:inset-0 after:z-[1] after:mx-auto after:size-8 after:translate-y-1/2 after:rounded-full after:bg-gray-1 after:blur-lg data-[state=active]:bg-gray-a3 data-[state=active]:text-foreground data-[state=active]:opacity-100 data-[state=active]:shadow-[inset_0_1px_2px_2px_var(--gray-a2),0_1px_5px_1px_var(--gray-1),inset_0_1px_1px_0px_var(--gray-a5),inset_0_0_0px_1px_var(--gray-a3)] data-[state=active]:after:bg-primary-a1 [&_span]:z-[2] [&_span]:bg-gradient-to-br [&_span]:from-gray-a12 [&_span]:via-gray-a8 [&_span]:to-gray-a12 [&_span]:bg-clip-text [&_span]:text-transparent\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List> & {\n    variant?: VariantProps<typeof tabListVariants>[\"variant\"]\n  }\n>(({ className, variant, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(tabListVariants({ variant, className }))}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> & {\n    variant?: VariantProps<typeof tabTriggerVariants>[\"variant\"]\n  }\n>(({ className, variant, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(tabTriggerVariants({ variant, className }))}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}