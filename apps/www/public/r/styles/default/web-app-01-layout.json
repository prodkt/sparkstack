{
  "name": "web-app-01-layout",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/layouts/web-app-01/index.tsx",
      "content": "\"use client\"\n\nimport React, { useEffect, useId, useRef, useState } from \"react\"\nimport clsx from \"clsx\"\nimport { MotionConfig, motion, useReducedMotion } from \"framer-motion\"\n// interface SidebarToggleProps {\n// \tisOpen: boolean | undefined\n// \tsetIsOpen?: () => void\n// }\n\nimport {\n  BellRing,\n  FolderRoot,\n  Home,\n  LockOpen,\n  Telescope,\n  Text,\n  Ticket,\n  X,\n} from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useSidebarToggle } from \"@/registry/new-york/hooks/use-sidebar-toggle\"\nimport { useStore } from \"@/registry/new-york/hooks/use-store\"\nimport DecorativeBg8 from \"@/registry/new-york/prodkt/assets/decorative-8\"\nimport { Footer } from \"@/registry/new-york/prodkt/footers/footer-01\"\nimport { SheetMenu } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/sheet-menu\"\nimport { Sidebar } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/sidebar\"\nimport { Container } from \"@/registry/new-york/prodkt/layouts/web-app-01/container\"\nimport { SocialMedia } from \"@/registry/new-york/prodkt/layouts/web-app-01/social-media\"\nimport { ProdktModeToggle } from \"@/registry/new-york/prodkt/prodkt-mode-toggle\"\nimport { ThemeSwitcher } from \"@/registry/new-york/prodkt/theme-switcher\"\nimport { Badge } from \"@/registry/new-york/ui/badge\"\nimport { Button } from \"@/registry/new-york/ui/button\"\n\nimport \"../../../../../styles/blocks/layouts/web-app-01.css\"\nimport { Offices } from \"./offices\"\n\nfunction MenuIcon(props: Readonly<React.ComponentPropsWithoutRef<\"svg\">>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path d=\"M2 6h20v2H2zM2 16h20v2H2z\" />\n    </svg>\n  )\n}\n\nexport function Header({\n  panelId,\n  icon: Icon,\n  expanded,\n  onToggle,\n  toggleRef,\n  invert = false,\n}: Readonly<{\n  panelId: string\n  icon: React.ComponentType<{ className?: string }>\n  expanded: boolean\n  onToggle: () => void\n  toggleRef: React.RefObject<HTMLButtonElement>\n  invert?: boolean\n}>) {\n  return (\n    <Container>\n      <div className=\"flex justify-stretch items-center place-items-start place-content-start gap-0 sm:gap-2 mx-0 mt-0 mb-auto rounded-t-2xl w-auto h-auto min-h-[57px] text-nowrap overflow-hidden pe-3\">\n        <Sidebar />\n        <div className=\"flex items-center justify-start w-full gap-x-2 md:ps-6\">\n          <a href=\"/\" className=\"hidden sm:flex\" aria-label=\"Home\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Home\n                size={14}\n                className=\"text-[var(--gray-a7)]\"\n                fill=\"currentColor\"\n              />\n              Home\n            </Button>\n          </a>\n          <a href=\"/blog\" className=\"hidden sm:flex\" aria-label=\"Blog\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Text\n                size={14}\n                className=\"text-[var(--blue-a7)]\"\n                fill=\"currentColor\"\n              />\n              Blog\n            </Button>\n          </a>\n          <a href=\"/projects/showcase\" aria-label=\"Projects\">\n            <Button variant=\"outline\" size=\"sm\">\n              <FolderRoot\n                size={14}\n                className=\"text-[var(--red-a7)]\"\n                fill=\"currentColor\"\n              />\n              Projects\n            </Button>\n          </a>\n          <a href=\"/bryan-funk\" aria-label=\"Employment\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Telescope\n                size={14}\n                className=\"text-[var(--mint-a7)]\"\n                fill=\"currentColor\"\n              />{\" \"}\n              Bryan Funk\n              <Badge\n                variant=\"solid\"\n                className=\"pt-0 pb-0 -me-1.5 px-1 rounded-md hidden lg:flex tracking-[0.06rem] uppercase text-[0.5rem]\"\n              >\n                Exploring Opportunities\n              </Badge>\n            </Button>\n          </a>\n        </div>\n        <div className=\"flex items-center justify-end w-full gap-x-2\">\n          <ProdktModeToggle />\n          <ThemeSwitcher />\n          <a href=\"/\" aria-label=\"Login to Prodkt\">\n            <Button variant=\"default\" size=\"sm\" className=\"hidden md:flex\">\n              <LockOpen size={14} />\n              Logout\n            </Button>\n          </a>\n          <a href=\"/\" aria-label=\"Login to Prodkt\">\n            <Button variant=\"default\" size=\"sm\" className=\"hidden md:flex\">\n              <LockOpen size={14} />\n              Login\n            </Button>\n          </a>\n          <a href=\"/\" aria-label=\"Login to Prodkt\">\n            <Button variant=\"default\" size=\"sm\" className=\"hidden md:flex\">\n              <Ticket size={14} /> Create Account\n            </Button>\n          </a>\n          <Button\n            variant=\"default\"\n            // ref={toggleRef as React.ForwardedRef<HTMLButtonElement>}\n            ref={toggleRef}\n            size=\"icon\"\n            onClick={onToggle}\n            aria-expanded={expanded ? \"true\" : \"false\"}\n            aria-controls={panelId}\n            className={clsx(\"hidden sm:flex\", invert ? \"\" : \"\")}\n            aria-label=\"Toggle navigation\"\n          >\n            {expanded ? <X size={16} /> : <BellRing size={16} />}\n          </Button>\n          <SheetMenu />\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nfunction NavigationRow({ children }: Readonly<{ children: React.ReactNode }>) {\n  return (\n    <div className=\"w-full h-auto\">\n      <Container>\n        <div className=\"grid items-stretch gap-4 p-4 overflow-hidden border-none justify-stretch place-items-stretch content-stretch place-content-stretch sm:grid-cols-2 xl:grid-cols-4 rounded-s-2xl\">\n          {children}\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nfunction NavigationItem({\n  href,\n  children,\n  navImageSrc,\n  navImageAlt,\n  navImageClass,\n}: Readonly<{\n  href: string\n  navImageClass?: React.ImgHTMLAttributes<HTMLImageElement>[\"className\"] | null\n  navImageSrc?: React.ReactNode | null // Changed type to ReactNode\n  navImageAlt?: React.ImgHTMLAttributes<HTMLImageElement>[\"alt\"] | undefined\n  children: React.ReactNode\n}>) {\n  return (\n    <a\n      href={href}\n      className=\"relative w-full p-4 overflow-hidden transition-all duration-500 ease-in-out md:p-12 rounded-xl basis-full group md:basis-1/2 isolate ring-1 ring-[var(--gray-a4)]\"\n    >\n      {children}\n      {navImageSrc ? navImageSrc : null}\n      <span className=\"group-hover:bg-[var(--ghost-aa7)] top-0 right-0 bottom-0 left-0 -z-10 absolute bg-[var(--ghost-aa9)] w-full h-full transition-all\" />\n    </a>\n  )\n}\n\nfunction Navigation() {\n  return (\n    <nav className=\"z-0 text-xl font-medium tracking-tight md:text-4xl lg:text-5xl\">\n      <NavigationRow>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center translate-y-1/4 saturate-50\"\n          navImageAlt=\"\"\n          href=\"/projects\"\n        >\n          Projects\n        </NavigationItem>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center translate-y-1/4 saturate-50\"\n          navImageAlt=\"\"\n          href=\"/projects/showcase\"\n        >\n          Work Showcase\n        </NavigationItem>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center\"\n          navImageAlt=\"\"\n          href=\"/bryan-funk\"\n        >\n          About me\n        </NavigationItem>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center rotate-90\"\n          navImageAlt=\"\"\n          href=\"/flows\"\n        >\n          Flows\n        </NavigationItem>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center\"\n          navImageAlt=\"\"\n          href=\"/design\"\n        >\n          Design\n        </NavigationItem>\n        <NavigationItem\n          navImageSrc={<DecorativeBg8 />}\n          navImageClass=\"min-w-[100%] transition-all min-h-[100%] object-center\"\n          navImageAlt=\"\"\n          href=\"/repos\"\n        >\n          Repos\n        </NavigationItem>\n      </NavigationRow>\n    </nav>\n  )\n}\n\nexport function ProdktLayout({\n  children,\n  hideFooter,\n}: Readonly<{ children: React.ReactNode; hideFooter?: boolean }>) {\n  let panelId = useId()\n  let [expanded, setExpanded] = useState(false)\n  let openRef = useRef<HTMLButtonElement>(null)\n  let closeRef = useRef<HTMLButtonElement>(null)\n  let navRef = useRef<HTMLButtonElement>(null)\n\n  let shouldReduceMotion = useReducedMotion()\n\n  const sidebar = useStore(useSidebarToggle, (state) => state)\n\n  // Move the conditional logic inside the useEffect if necessary\n  useEffect(() => {\n    if (!sidebar) return\n\n    function onClick(event: MouseEvent) {\n      if (\n        event.target instanceof HTMLElement &&\n        event.target.closest(\"a\")?.href === window.location.href\n      ) {\n        setExpanded(false)\n      }\n    }\n\n    window.addEventListener(\"click\", onClick)\n\n    return () => {\n      window.removeEventListener(\"click\", onClick)\n    }\n  }, [sidebar])\n\n  const toggleRef = expanded ? closeRef : openRef\n\n  return sidebar ? (\n    <MotionConfig transition={shouldReduceMotion ? { duration: 0 } : undefined}>\n      <div className=\"grid h-full overflow-hidden prodkt-rim-container rounded-2xl w-full\">\n        <header\n          className={cn(\n            \"overflow-hidden rounded-t-2xl prodkt-header\",\n            sidebar?.isOpen === false\n              ? \"ml-[56px] w-[calc(100%_-_56px)]\"\n              : \"ml-[14rem]  w-[calc(100%_-_14rem)]\"\n          )}\n        >\n          <div\n            aria-hidden={expanded ? \"true\" : undefined}\n            className={cn(\n              \"left-0 right-0 z-50 ml-[56px] flex items-start justify-center w-full min-w-full prodkt-header mx-0 mt-0 overflow-hidden\",\n              sidebar?.isOpen === false\n                ? \"ml-[56px] w-[calc(100%_-_56px)]\"\n                : \"ml-[14rem]  w-[calc(100%_-_14rem)]\"\n            )}\n          >\n            <Header\n              panelId={panelId}\n              icon={MenuIcon}\n              // @ts-ignore\n              toggleRef={toggleRef}\n              expanded={expanded}\n              onToggle={() => {\n                setExpanded((expanded) => !expanded)\n                window.setTimeout(() =>\n                  closeRef.current?.focus({ preventScroll: true })\n                )\n              }}\n            />\n          </div>\n          <motion.div\n            layout\n            // @ts-ignore\n            id={panelId}\n            transition={{\n              opacity: { ease: \"linear\" },\n              type: \"spring\",\n              stiffness: 100,\n              layout: { duration: 0.3 },\n            }}\n            style={{\n              height: expanded ? \"calc(100dvh - 32px)\" : \"0.05rem\",\n              borderBottomLeftRadius: expanded ? \"0\" : \"40px\",\n            }}\n            aria-hidden={expanded ? undefined : \"true\"}\n            className={cn(\n              \"transition-[width] right-0 left-0 z-[40] absolute -mt-[0.05rem] w-full will-change-transform origin-top overflow-hidden\",\n              sidebar?.isOpen === false\n                ? \"ml-[57px] w-[calc(100%_-_56px)]\"\n                : \"ml-[14.1rem]\"\n            )}\n          >\n            <motion.div layout>\n              <div\n                // @ts-ignore\n                ref={navRef}\n                className=\"ms-0 me-auto right-auto after:right-0 after:bottom-0 left-0 after:left-0 after:z-[-1] after:absolute after:bg-[var(--ghost-aa12)] backdrop-blur rounded-tl-2xl w-[var(--dropmenuWidth)] after:w-full h-[var(--dropmenuHeight)] after:h-full translate-y-[59px] overflow-hidden will-change-auto\"\n              >\n                <Navigation />\n                <div className=\"relative top-0 rounded-s-2xl\">\n                  <Container className=\"w-full\">\n                    <div className=\"grid grid-cols-1 px-16 pt-10 pb-16 gap-y-10 sm:grid-cols-2 sm:pt-16\">\n                      <div>\n                        <h2 className=\"text-xs uppercase tracking-[0.3rem] text-[var(--gray-9)]\">\n                          Working remote from\n                        </h2>\n                        <Offices\n                          invert\n                          className=\"grid grid-cols-1 gap-8 mt-6 sm:grid-cols-2\"\n                        />\n                      </div>\n                      <div className=\"sm:pl-16 sm:border-transparent sm:border-l\">\n                        <h2 className=\"text-xs uppercase tracking-[0.3rem] text-[var(--gray-9)]\">\n                          Follow me\n                        </h2>\n                        <SocialMedia className=\"mt-6\" invert />\n                      </div>\n                    </div>\n                  </Container>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        </header>\n\n        <motion.main\n          layout\n          transition={{\n            opacity: { ease: \"anticipate\" },\n            type: \"spring\",\n            stiffness: 100,\n            layout: { duration: 0.3 },\n          }}\n          className={cn(\n            \"min-h-[calc(100vh_-_90px)] relative p-0 overflow-hidden rounded-tl-2xl prodkt-main\",\n            sidebar?.isOpen === false ? \"ml-[0px]\" : \"ml-[10.5rem]\"\n          )}\n        >\n          <motion.div>\n            <div className=\"prodkt-scroll-wrapper relative top-0 bottom-0 flex-col justify-start items-center scroll-m-0 mx-0 my-0 p-0 scroll-p-0 rounded-tl-2xl w-full h-[var(--mainHeight)] min-h-full overflow-hidden overflow-x-hidden overflow-y-auto\">\n              {children}\n              {hideFooter ? null : <Footer />}\n            </div>\n          </motion.div>\n        </motion.main>\n      </div>\n    </MotionConfig>\n  ) : (\n    <>\n      {children}\n      {hideFooter ? null : <Footer />}\n    </>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/offices.tsx",
      "content": "import clsx from \"clsx\"\n\nfunction Office({\n  name,\n  children,\n  invert = false,\n}: Readonly<{\n  name: string\n  children: React.ReactNode\n  invert?: boolean\n}>) {\n  return (\n    <address\n      className={clsx(\n        \"text-sm not-italic\",\n        invert ? \"text-neutral-300\" : \"text-neutral-600\"\n      )}\n    >\n      <strong className={invert ? \"text-white\" : \"text-neutral-950\"}>\n        {name}\n      </strong>\n      <br />\n      {children}\n    </address>\n  )\n}\n\nexport function Offices({\n  invert = false,\n  ...props\n}: React.ComponentPropsWithoutRef<\"ul\"> & { invert?: boolean }) {\n  return (\n    <ul {...props}>\n      <li>\n        <Office name=\"Boise\" invert={invert}>\n          Idaho, USA\n        </Office>\n      </li>\n      <li>\n        <Office name=\"Las Vegas\" invert={invert}>\n          Nevada, USA\n        </Office>\n      </li>\n    </ul>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/container.tsx",
      "content": "import clsx from \"clsx\"\n\ntype ContainerProps<T extends React.ElementType> = {\n  as?: T\n  className?: string\n  children: React.ReactNode\n}\n\nexport function Container<T extends React.ElementType = \"div\">({\n  as,\n  className,\n  children,\n}: Omit<React.ComponentPropsWithoutRef<T>, keyof ContainerProps<T>> &\n  ContainerProps<T>) {\n  let Component = as ?? \"div\"\n\n  return (\n    <Component className={clsx(\"w-full\", className)}>\n      <div className=\"w-full\">{children}</div>\n    </Component>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/social-media.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport clsx from \"clsx\"\n\nimport BehanceLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_behancestyle2\"\nimport DiscordLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_discordstyle2\"\nimport DockerLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_dockerstyle2\"\nimport DribbbleLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_dribbblestyle2\"\nimport FigmaLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_figmastyle2\"\nimport GithubLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_githubstyle2\"\nimport GitlabLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_gitlabstyle2\"\nimport InstagramLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_instagramstyle2\"\nimport LinkedinLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_linkedinstyle2\"\nimport SlackLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_slackstyle2\"\nimport XLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_xstyle2\"\nimport YouTubeLogo from \"@/registry/new-york/prodkt/assets/social/prodktSocial_youTubestyle2\"\n\ninterface SocialMediaProps {\n  date_created: string | null\n  date_updated: string | null\n  description: string | null\n  domain: string | null\n  id: string\n  social_behance: string | null\n  social_discord: string | null\n  social_docker: string | null\n  social_dribbble: string | null\n  social_email: string | null\n  social_facebook: string | null\n  social_figma: string | null\n  social_github: string | null\n  social_gitlab: string | null\n  social_instagram: string | null\n  social_linkedin: string | null\n  social_slack: string | null\n  social_x: string | null\n  social_youtube: string | null\n  sort: number | null\n  status: string\n  title: string | null\n  user_created: string | null\n  user_updated: string | null\n  workspace: string | null\n}\n\nconst socials = [\n  {\n    social_behance: \"https://www.behance.net/prodkt\",\n  },\n  {\n    social_youtube: \"https://www.youtube.com/prodkt\",\n  },\n  {\n    social_x: \"https://www.x.com/prodkt\",\n  },\n  {\n    social_linkedin: \"https://www.linkedin.com/prodkt\",\n  },\n  {\n    social_instagram: \"https://www.instagram.com/prodkt\",\n  },\n  {\n    social_gitlab: \"https://www.gitlab.com/prodkt\",\n  },\n  {\n    social_github: \"https://www.github.com/prodkt\",\n  },\n  {\n    social_figma: \"https://www.figma.com/prodkt\",\n  },\n  {\n    social_dribbble: \"https://www.dribbble.com/prodkt\",\n  },\n  {\n    social_docker: \"https://www.docker.com/prodkt\",\n  },\n  {\n    social_discord: \"https://www.discord.com/prodkt\",\n  },\n  {\n    social_behance: \"https://www.behance.net/prodkt\",\n  },\n  {\n    social_slack: \"https://www.slack.com/prodkt\",\n  },\n  {\n    social_email: \"mailto:prodkt@prodkt.com\",\n  },\n]\n\nexport function SocialMedia({\n  className,\n  invert = false,\n}: Readonly<{\n  className?: string\n  invert?: boolean\n}>) {\n  return (\n    <ul\n      className={clsx(\n        \"flex gap-x-0\",\n        invert ? \"text-white\" : \"text-neutral-950\",\n        className\n      )}\n    >\n      {socials[0]?.social_youtube ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_youtube}`}\n          >\n            <YouTubeLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_x ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_x}`}\n          >\n            <XLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_slack ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_slack}`}\n          >\n            <SlackLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_linkedin ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_linkedin}`}\n          >\n            <LinkedinLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_instagram ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_instagram}`}\n          >\n            <InstagramLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_gitlab ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_gitlab}`}\n          >\n            <GitlabLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_github ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_github}`}\n          >\n            <GithubLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_figma ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_figma}`}\n          >\n            <FigmaLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_dribbble ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_dribbble}`}\n          >\n            <DribbbleLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_docker ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_docker}`}\n          >\n            <DockerLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_discord ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_discord}`}\n          >\n            <DiscordLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n      {socials[0]?.social_behance ? (\n        <li>\n          <a\n            className=\"group hover:opacity-100 opacity-75 after:absolute after:w-4 after:h-4 after:bg-[var(--ghost-aa2)] z-[0] after:left-0 after:right-0 after:top-0 after:bottom-0 after:m-auto after:blur-[2px] rounded-2xl relative flex items-center justify-center origin-center w-10 h-10\"\n            href={`${socials[0]?.social_behance}`}\n          >\n            <BehanceLogo className=\"object-contain w-10 h-10 p-0 mx-auto my-auto origin-center will-change-transform\" />\n          </a>\n        </li>\n      ) : undefined}\n    </ul>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/admin-panel-layout.tsx",
      "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useSidebarToggle } from \"@/registry/new-york/hooks/use-sidebar-toggle\"\nimport { useStore } from \"@/registry/new-york/hooks/use-store\"\nimport { Footer } from \"@/registry/new-york/prodkt/footers/footer-01\"\nimport { Sidebar } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/sidebar\"\n\nexport default function AdminPanelLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  const sidebar = useStore(useSidebarToggle, (state) => state)\n\n  if (!sidebar) return null\n\n  return (\n    <>\n      <Sidebar />\n      <main\n        className={cn(\n          \"min-h-[calc(100vh_-_56px)] bg-zinc-50 dark:bg-zinc-900 transition-[margin-left] ease-in-out duration-300\",\n          sidebar?.isOpen === false ? \"lg:ml-[90px]\" : \"lg:ml-72\"\n        )}\n      >\n        {children}\n      </main>\n      <footer\n        className={cn(\n          \"transition-[margin-left] ease-in-out duration-300\",\n          sidebar?.isOpen === false ? \"lg:ml-[90px]\" : \"lg:ml-72\"\n        )}\n      >\n        <Footer />\n      </footer>\n    </>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/collapse-menu-button.tsx",
      "content": "import { useState } from \"react\"\nimport { DropdownMenuArrow } from \"@radix-ui/react-dropdown-menu\"\nimport { ChevronDown, Dot, LucideIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariantsConfig } from \"@/registry/new-york/lib/button-variants\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/new-york/ui/collapsible\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/new-york/ui/dropdown-menu\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/new-york/ui/tooltip\"\n\n// Extract variant type directly from the config\ntype ButtonVariant = keyof typeof buttonVariantsConfig.variants.variant\n\nexport type Submenu = {\n  href: string\n  label: string\n  active?: boolean\n  buttonVariant?: ButtonVariant\n}\n\ninterface CollapseMenuButtonProps {\n  icon: LucideIcon\n  label: string\n  active: boolean\n  submenus: Submenu[]\n  isOpen: boolean | undefined\n  buttonVariant?: ButtonVariant\n}\n\nexport function CollapseMenuButton({\n  icon: Icon,\n  label,\n  active,\n  submenus,\n  buttonVariant,\n  isOpen,\n}: CollapseMenuButtonProps) {\n  const isSubmenuActive = submenus.some((submenu) => submenu.active)\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(isSubmenuActive)\n\n  return isOpen ? (\n    <Collapsible\n      open={isCollapsed}\n      onOpenChange={setIsCollapsed}\n      className=\"w-full\"\n    >\n      <CollapsibleTrigger\n        className=\"[&[data-state=open]>div>div>svg]:rotate-180 mb-1\"\n        asChild\n      >\n        <Button\n          variant={isSubmenuActive ? buttonVariant : (buttonVariant ?? \"ghost\")}\n          className=\"justify-start w-full h-10 px-[11px]\"\n        >\n          <div className=\"flex items-center justify-between w-full\">\n            <div className=\"flex items-center\">\n              <span className=\"mr-4\">\n                <Icon size={18} />\n              </span>\n              <p\n                className={cn(\n                  \"max-w-[150px] truncate text-[var(--gray-12)]\",\n                  isOpen\n                    ? \"translate-x-0 opacity-100\"\n                    : \"-translate-x-96 opacity-0\"\n                )}\n              >\n                {label}\n              </p>\n            </div>\n            <div\n              className={cn(\n                \"whitespace-nowrap\",\n                isOpen\n                  ? \"translate-x-0 opacity-100\"\n                  : \"-translate-x-96 opacity-0\"\n              )}\n            >\n              <ChevronDown\n                size={18}\n                className=\"transition-transform duration-200\"\n              />\n            </div>\n          </div>\n        </Button>\n      </CollapsibleTrigger>\n      <CollapsibleContent className=\"overflow-hidden data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down\">\n        {submenus.map(({ href, label, active, buttonVariant }) => (\n          <Button\n            key={label}\n            variant={buttonVariant ?? \"ghost\"}\n            className=\"justify-start w-full h-8 mb-1\"\n            asChild\n          >\n            <a href={href}>\n              <span className=\"ml-0 mr-4\">\n                <Dot size={18} />\n              </span>\n              <p\n                className={cn(\n                  \"max-w-[170px] truncate text-[var(--gray-11)]\",\n                  isOpen\n                    ? \"translate-x-0 opacity-100\"\n                    : \"-translate-x-96 opacity-0\"\n                )}\n              >\n                {label}\n              </p>\n            </a>\n          </Button>\n        ))}\n      </CollapsibleContent>\n    </Collapsible>\n  ) : (\n    <DropdownMenu>\n      <TooltipProvider disableHoverableContent>\n        <Tooltip delayDuration={100}>\n          <TooltipTrigger asChild>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant={\n                  active\n                    ? (buttonVariant ?? \"ghost\")\n                    : (buttonVariant ?? \"ghost\")\n                }\n                className=\"justify-start w-full h-8 mb-1\"\n              >\n                <div className=\"flex items-center justify-between w-full\">\n                  <div className=\"flex items-center\">\n                    <span className={cn(isOpen === false ? \"\" : \"mr-0\")}>\n                      <Icon size={18} />\n                    </span>\n                    <p\n                      className={cn(\n                        \"max-w-[200px] truncate text-[var(--gray-10)]\",\n                        isOpen === false ? \"opacity-0\" : \"opacity-100\"\n                      )}\n                    >\n                      {label}\n                    </p>\n                  </div>\n                </div>\n              </Button>\n            </DropdownMenuTrigger>\n          </TooltipTrigger>\n          <TooltipContent side=\"right\" align=\"start\" alignOffset={2}>\n            {label}\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n      <DropdownMenuContent\n        side=\"right\"\n        sideOffset={4}\n        align=\"start\"\n        className=\"p-0 -translate-y-5 bg-transparent border-0 shadow-none backdrop-blur-none rounded-s-none\"\n      >\n        <div className=\"relative left-0 w-4 h-4\">\n          <div className=\"absolute left-0 top-px w-4 h-4 border-b border-l border-l-[var(--gray-3)] border-t-[var(--ghost-a1)] rounded-bl-full z-[1]\"></div>\n          <div className=\"absolute left-0 w-4 h-4  bg-[#0B0B0D] gradientMask-bottomLeft z-[0]\"></div>\n        </div>\n        <div className=\"p-0 rounded-e-2xl  bg-gradient-to-r from-[#0B0B0D] to-[var(--gray-1)] shadow-lg\">\n          <div className=\"ms-4 border py-1 px-1 border-l-0 rounded-e-xl min-w-[190px] shadow-lg\">\n            <div className=\"min-w-[190px] -translate-x-4 -me-4\">\n              <DropdownMenuLabel className=\"max-w-[190px] truncate bg-transparent text-[var(--gray-11)] font-normal\">\n                {label}\n              </DropdownMenuLabel>\n              <DropdownMenuSeparator className=\"h-px border-0 border-transparent backdrop-blur-none ms-2 bg-gradient-to-r from-transparent via-transparent to-[var(--gray-9)] gradientMask-5\" />\n              {submenus.map(({ href, label }, index) => (\n                <DropdownMenuItem key={index} asChild>\n                  <a\n                    className=\"cursor-pointer !font-light text-[var(--gray-10)]\"\n                    href={href}\n                  >\n                    <p className=\"max-w-[180px] truncate !font-light\">\n                      {label}\n                    </p>\n                  </a>\n                </DropdownMenuItem>\n              ))}\n              <DropdownMenuArrow className=\"fill-border\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"relative left-0 w-4 h-4\">\n          <div className=\"absolute left-0 -top-px w-4 h-4 border-t border-l border-l-[var(--gray-3)] rounded-tl-full z-[1]\"></div>\n          <div className=\"absolute left-0 w-4 h-4  bg-[#0B0B0D] gradientMask-bottomLeft z-[0] rotate-90\"></div>\n        </div>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/content-layout.tsx",
      "content": "import { Navbar } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/navbar\"\n\ninterface ContentLayoutProps {\n  title: string\n  children: React.ReactNode\n}\n\nexport function ContentLayout({\n  title,\n  children,\n}: Readonly<ContentLayoutProps>) {\n  return (\n    <div>\n      <Navbar title={title} />\n      <div className=\"container px-4 pt-8 pb-8 sm:px-8\">{children}</div>\n    </div>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/footer.tsx",
      "content": "export function Footer() {\n  return (\n    <div className=\"z-20 w-full bg-background/95 shadow backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"flex items-center mx-4 md:mx-8 h-14\">\n        <p className=\"text-xs leading-loose text-left md:text-sm text-muted-foreground\">\n          Built on top of{\" \"}\n          <a\n            href=\"https://sparkstack.prodkt.cloud\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"font-medium underline underline-offset-4\"\n          >\n            shadcn/ui\n          </a>\n          . The source code is available on{\" \"}\n          <a\n            href=\"https://github.com/prodkt\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"font-medium underline underline-offset-4\"\n          >\n            GitHub\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/menu-list.ts",
      "content": "import {\n  Code2,\n  Construction,\n  Cpu,\n  FigmaIcon,\n  FolderArchive,\n  Gitlab,\n  Route,\n} from \"lucide-react\"\n\nimport { buttonVariantsConfig } from \"@/registry/new-york/lib/button-variants\"\n\n// Extract variant type directly from the config\ntype ButtonVariant = keyof typeof buttonVariantsConfig.variants.variant\n\nexport type Submenu = {\n  href: string\n  label: string\n  active?: boolean | undefined\n  buttonVariant?: ButtonVariant\n}\n\ntype Menu = {\n  href: string\n  label: string\n  active?: boolean | undefined\n  icon: any\n  submenus: Submenu[]\n  buttonVariant?: ButtonVariant\n}\n\ntype Group = {\n  groupLabel: string\n  menus: Menu[]\n  buttonVariant?: ButtonVariant\n}\n\nexport function getMenuList(): Group[] {\n  return [\n    {\n      groupLabel: \"\",\n      menus: [\n        {\n          href: \"/flows\",\n          label: \"Flows\",\n          icon: Route,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        // {\n        // \thref: '',\n        // \tlabel: 'Codeblocks',\n        // \ticon: Code2,\n        // \tbuttonVariant: 'outlineCodeblocks',\n        // \tsubmenus: [\n        // \t\t{\n        // \t\t\thref: '/codeblocks',\n        // \t\t\tlabel: 'All Codeblocks',\n        // \t\t\tbuttonVariant: 'outlineCodeblocks',\n        // \t\t},\n        // \t\t{\n        // \t\t\thref: '/codeblocks/new',\n        // \t\t\tlabel: 'New Codeblock',\n        // \t\t\tbuttonVariant: 'outlineCodeblocks',\n        // \t\t},\n        // \t],\n        // },\n        {\n          href: \"/design\",\n          label: \"Design Files\",\n          icon: FigmaIcon,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        {\n          href: \"/repos\",\n          label: \"Repositories\",\n          icon: Gitlab,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        {\n          href: \"/projects/showcase\",\n          label: \"Showcase\",\n          icon: FolderArchive,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        {\n          href: \"/codeblocks\",\n          label: \"Codeblocks\",\n          icon: Code2,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        {\n          href: \"/projects\",\n          label: \"Projects\",\n          icon: Construction,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n        {\n          href: \"/technology\",\n          label: \"Technology\",\n          icon: Cpu,\n          submenus: [],\n          buttonVariant: \"outline\",\n        },\n      ],\n    },\n    // ,\n    // {\n    //   groupLabel: \"Settings\",\n    //   menus: [\n    //     {\n    //       href: \"/users\",\n    //       label: \"Users\",\n    //       icon: Users,\n    //       submenus: []\n    //     },\n    //     {\n    //       href: \"/account\",\n    //       label: \"Account\",\n    //       icon: Settings,\n    //       submenus: []\n    //     }\n    //   ]\n    // }\n  ]\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/menu.tsx",
      "content": "import { motion } from \"framer-motion\"\nimport { Ellipsis, LifeBuoy } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { CollapseMenuButton } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/collapse-menu-button\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/registry/new-york/ui/drawer\"\nimport { ScrollArea } from \"@/registry/new-york/ui/scroll-area\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/new-york/ui/tooltip\"\n\nimport { getMenuList } from \"./menu-list\"\n\ninterface MenuProps {\n  isOpen: boolean | undefined\n}\n\nexport function Menu({ isOpen }: Readonly<MenuProps>) {\n  const menuList = getMenuList()\n\n  return (\n    <ScrollArea className=\"[&>div>div[style]]:!block\">\n      <motion.nav\n        layout\n        transition={{\n          opacity: { ease: \"linear\" },\n          type: \"spring\",\n          stiffness: 100,\n          layout: { duration: 0.1 },\n        }}\n        className=\"w-full h-full mt-0\"\n      >\n        <motion.ul\n          layout\n          transition={{\n            opacity: { ease: \"linear\" },\n            type: \"spring\",\n            stiffness: 100,\n            layout: { duration: 0.1 },\n          }}\n          // className=\"flex flex-col min-h-[calc(100vh-48px-36px)] sm:min-h-[calc(100vh-32px-40px-32px)] items-start justify-between space-y-1 px-2 pt-12\"\n          className=\"flex flex-row px-2.5 gap-1 mt-14 h-[calc(100vh-48px-36px)] sm:h-[calc(100vh-32px-40px-32px)]\"\n        >\n          {menuList.map(({ groupLabel, menus }, index) => (\n            <li\n              className={cn(\n                \"flex flex-col mx-auto\",\n                groupLabel ? \"p-0\" : \"\",\n                isOpen ? \"\" : \"\"\n              )}\n              key={index}\n            >\n              {(isOpen && groupLabel) || isOpen === undefined ? (\n                <p className=\"text-[0.6rem] font-medium text-[var(--gray-9)] pb-4 pt-2 px-3 max-w-[248px] uppercase tracking-[0.2rem] truncate\">\n                  {groupLabel}\n                </p>\n              ) : !isOpen && isOpen !== undefined && groupLabel ? (\n                <TooltipProvider>\n                  <Tooltip delayDuration={100}>\n                    <TooltipTrigger className=\"w-full\">\n                      <div className=\"flex items-center justify-center w-full\">\n                        <Ellipsis className=\"w-5 h-5\" />\n                      </div>\n                    </TooltipTrigger>\n                    <TooltipContent side=\"right\">\n                      <p>{groupLabel}</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              ) : (\n                <p className=\"p-0\"></p>\n              )}\n              <div\n                className={cn(\n                  \"ease-in-out duration-1000 grid origin-bottom-right\",\n                  isOpen === false ? \"grid-cols-2 gap-3\" : \"grid-cols-2 gap-2\"\n                )}\n              >\n                {menus.map(\n                  (\n                    {\n                      href,\n                      label,\n                      icon: Icon,\n                      active,\n                      submenus,\n                      buttonVariant,\n                    },\n                    index\n                  ) =>\n                    submenus.length === 0 ? (\n                      <div\n                        className={cn(\n                          \"w-full\",\n                          isOpen === false\n                            ? \"col-span-2 h-[32px] w-[32px] max-h-[32px] flex items-center justify-center\"\n                            : \"col-span-1\"\n                        )}\n                        key={index}\n                      >\n                        <TooltipProvider disableHoverableContent>\n                          <Tooltip delayDuration={100}>\n                            <TooltipTrigger asChild>\n                              <Button\n                                size=\"menu\"\n                                variant={\n                                  active\n                                    ? buttonVariant\n                                    : (buttonVariant ?? \"ghost\")\n                                }\n                                className={cn(\n                                  \"group will-change-auto after:will-change-auto after:backdrop-blur ring-1 ring-inset  ring-[var(--gray-a3)]  before:bg-transparent before:left-0 before:right-0 before:top-0 before:bottom-0 before:absolute before:w-full before-h-full before:z-[-1]\",\n                                  isOpen === false\n                                    ? \"aspect-square basis-full flex items-center justify-center bg-none before:absolute h-[32px] w-[32px] max-h-[32px] max-w-[32px]\"\n                                    : \"aspect-square basis-full items-start justify-between\"\n                                )}\n                                asChild\n                              >\n                                <a href={href}>\n                                  <span\n                                    className={cn(\n                                      isOpen === false ? \"mx-0\" : \"mr-0\"\n                                    )}\n                                  >\n                                    <Icon\n                                      strokeWidth=\"2.5\"\n                                      size={isOpen === false ? \"16\" : \"28\"}\n                                      className={cn(\n                                        \"select-none pointer-events-none top-auto bottom-auto left-auto right-auto mx-auto my-auto origin-top-left\",\n                                        isOpen === false\n                                          ? \"translate-y-[2px] brightness-125\"\n                                          : \"translate-y-[2px] transition-all duration-1000 ease-in-out  delay-500 will-change-auto\"\n                                      )}\n                                    />\n                                    <Icon\n                                      strokeWidth=\"2.5\"\n                                      size={isOpen === false ? \"20\" : \"64\"}\n                                      className={cn(\n                                        \"select-none hidden pointer-events-none absolute top-auto -translate-y-1/4 -translate-x-1/2 bottom-auto left-auto right-auto mx-auto my-auto origin-center blur-2xl\",\n                                        isOpen === false\n                                          ? \"translate-y-[2px] opacity-0\"\n                                          : \"translate-y-[2px] transition-all duration-1000 ease-in-out opacity-100 will-change-auto delay-500 group-hover:contrast-100\"\n                                      )}\n                                    />\n                                  </span>\n                                  <p\n                                    className={cn(\n                                      \"max-w-[200px] truncate text-[var(--gray-12)] transition-all duration-1000 text-left ms-0 -translate-x-1\",\n                                      isOpen === false\n                                        ? \"opacity-100 -translate-y-2\"\n                                        : \"opacity-100 translate-y-0\"\n                                    )}\n                                  >\n                                    {label}\n                                  </p>\n                                </a>\n                              </Button>\n                            </TooltipTrigger>\n                            {isOpen === false && (\n                              <TooltipContent side=\"right\">\n                                {label}\n                              </TooltipContent>\n                            )}\n                          </Tooltip>\n                        </TooltipProvider>\n                      </div>\n                    ) : (\n                      <div className=\"w-full\" key={index}>\n                        <CollapseMenuButton\n                          icon={Icon}\n                          label={label}\n                          active={active ?? false}\n                          submenus={submenus}\n                          buttonVariant={buttonVariant ?? \"ghost\"}\n                          isOpen={isOpen}\n                        />\n                      </div>\n                    )\n                )}\n              </div>\n            </li>\n          ))}\n        </motion.ul>\n        <div className=\"items-end hidden w-full mt-0 mb-0 grow\">\n          <Drawer>\n            <TooltipProvider disableHoverableContent>\n              <Tooltip delayDuration={100}>\n                <TooltipTrigger asChild>\n                  <DrawerTrigger asChild>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      className=\"justify-center mt-0 pointer-events-auto \"\n                    >\n                      <span className={cn(isOpen === false ? \"\" : \"mr-0\")}>\n                        <LifeBuoy size={20} />\n                      </span>\n                      <p\n                        className={cn(\n                          \"whitespace-nowrap\",\n                          isOpen === false ? \"opacity-0 hidden\" : \"opacity-100\"\n                        )}\n                      >\n                        Requests\n                      </p>\n                    </Button>\n                  </DrawerTrigger>\n                </TooltipTrigger>\n                {isOpen === false && (\n                  <TooltipContent side=\"right\">Requests</TooltipContent>\n                )}\n              </Tooltip>\n            </TooltipProvider>\n\n            <DrawerContent>\n              <div className=\"w-full max-w-sm mx-auto sm:max-w-2xl\">\n                <DrawerHeader>\n                  <DrawerTitle></DrawerTitle>\n                  <DrawerDescription></DrawerDescription>\n                </DrawerHeader>\n\n                <div className=\"flex flex-col w-full gap-0\">\n                  <div className=\"flex flex-row flex-wrap w-full grid-cols-1 gap-4 p-2 sm:flex-nowrap sm:grid-cols-2\">\n                    <div className=\"flex flex-col justify-start items-start gap-3 bg-gradient-to-tr from-[var(--gray-a3)] via-[var(--gray-a2)] to-[var(--gray-a1] px-5 py-4 rounded-2xl w-full basis-1/3 ring ring-inset\">\n                      <h3 className=\"bg-clip-text bg-gradient-to-br from-[var(--gray-10)] via-[var(--gray-12)] to-[var(--gray-9)] py-1 font-bold text-2xl text-transparent leading-6 tracking-tight\">\n                        In search of my next challenge.\n                      </h3>\n                      <div className=\"flex flex-col gap-1 text-[var(--gray-a9)] text-balance text-sm\">\n                        <p>I'm actively exploring opportunities.</p>\n                      </div>\n                      <Button variant=\"default\" size=\"sm\" className=\"mt-auto\">\n                        Lets talk\n                      </Button>\n                    </div>\n                    <div className=\"flex flex-col justify-start items-start gap-3 border-[var(--gray-a3)] bg-gradient-to-bl from-[var(--gray-2)] via-[var(--gray-1)] to-[var(--gray-a1)] px-5 py-4 border rounded-2xl w-full basis-2/3\">\n                      <h3 className=\"bg-clip-text bg-gradient-to-br from-[var(--gray-9)] via-[var(--gray-12)] to-[var(--gray-9)] py-1 font-bold text-2xl text-transparent leading-6 tracking-tight\">\n                        Looking to collaborate on something bleeding-edge?\n                      </h3>\n                      <div className=\"flex flex-col gap-2 w-full text-[var(--gray-a9)] text-balance text-sm\">\n                        <p>\n                          I’m young at heart and motivated to make big impacts\n                          and improve users experiences across nearly all\n                          sectors. Think I can help?\n                        </p>\n                      </div>\n                      <Button variant=\"default\" size=\"sm\">\n                        Lets talk\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row flex-wrap w-full grid-cols-1 gap-4 p-2 sm:flex-nowrap sm:grid-cols-2 min-h-40\">\n                    <div className=\"flex flex-col justify-start items-start gap-3 border-[var(--gray-a3)] bg-gradient-to-bl from-[var(--teal-2)] via-[var(--teal-1)] to-[var(--teal-3)] px-5 py-4 border rounded-2xl basis-1/3\">\n                      <h3 className=\"bg-clip-text bg-gradient-to-br from-[var(--amber-9)] via-[var(--teal-11)] to-[var(--sky-9)] py-1 font-bold text-2xl text-transparent leading-6 tracking-tight\">\n                        Requests.\n                      </h3>\n                      <div className=\"flex flex-col gap-2 text-[var(--gray-a9)] text-balance text-sm\">\n                        <p>\n                          Curious about something I've done? Need a\n                          recommendation on how I'd proceed with a project?\n                          Regardless, I'm always here to pass on my knowledge\n                          and experience.\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col justify-start items-start gap-3 border-[var(--gray-a3)] bg-gradient-to-bl from-[var(--sky-1)] via-[var(--sky-a1)] to-[var(--sky-a1)] px-5 py-4 border rounded-2xl basis-2/3\">\n                      <h3 className=\"bg-clip-text bg-gradient-to-br from-[var(--blue-9)] via-[var(--blue-12)] to-[var(--blue-11)] py-1 font-bold text-2xl text-transparent leading-6 tracking-tight\">\n                        Work for hire.\n                      </h3>\n                      <div className=\"flex flex-col gap-2 text-[var(--gray-a9)] text-balance text-sm\">\n                        <p>\n                          Why’ll I prefer to be vested in a venture by, equity,\n                          sweat-equity and working with talented designers &\n                          engineers to bring home big initiatives. For truly\n                          fitting projects I believe in, with big vision and\n                          stakeholders willing to make big bets I will make\n                          myself available for contract and go-to-market work.\n                        </p>\n                      </div>\n                      <Button variant=\"default\" size=\"sm\" className=\"mt-auto\">\n                        Lets talk\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n                <DrawerFooter>\n                  <DrawerClose asChild>\n                    <p className=\"text-[var(--gray-a9)] cursor-pointer\">\n                      Close\n                    </p>\n                  </DrawerClose>\n                </DrawerFooter>\n              </div>\n            </DrawerContent>\n          </Drawer>\n        </div>\n      </motion.nav>\n    </ScrollArea>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/navbar.tsx",
      "content": "import { SheetMenu } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/sheet-menu\"\nimport { UserNav } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/user-nav\"\n\ninterface NavbarProps {\n  title: string\n}\n\nexport function Navbar({ title }: Readonly<NavbarProps>) {\n  return (\n    <header className=\"sticky top-0 z-10 w-full bg-[var(--gray-1)] shadow backdrop-blur supports-[backdrop-filter]:bg-background/60 dark:shadow-secondary\">\n      <div className=\"flex items-center mx-4 sm:mx-8 h-14\">\n        <div className=\"flex items-center space-x-4 lg:space-x-0\">\n          <SheetMenu />\n          <h1 className=\"font-bold\">{title}</h1>\n        </div>\n        <div className=\"flex items-center justify-end flex-1 space-x-2\">\n          <UserNav />\n        </div>\n      </div>\n    </header>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/sheet-menu.tsx",
      "content": "import { MenuIcon } from \"lucide-react\"\n\nimport { Menu } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/menu\"\nimport { Logo } from \"@/registry/new-york/prodkt/logo\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTrigger,\n} from \"@/registry/new-york/ui/sheet\"\n\nexport function SheetMenu() {\n  return (\n    <Sheet>\n      <SheetTrigger className=\"lg:hidden\" asChild>\n        <Button className=\"h-8\" variant=\"default\" size=\"icon\">\n          <MenuIcon size={18} />\n        </Button>\n      </SheetTrigger>\n      <SheetContent className=\"flex flex-col h-full px-3 sm:w-72\" side=\"left\">\n        <SheetHeader>\n          <a href=\"/\" className=\"px-6 py-2\">\n            <Logo className=\"w-32 min-h-6 min-w-6\" />\n          </a>\n        </SheetHeader>\n        <Menu isOpen />\n      </SheetContent>\n    </Sheet>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/sidebar-toggle.tsx",
      "content": "import { ChevronLeft, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\n\ninterface SidebarToggleProps {\n  isOpen: boolean | undefined\n  setIsOpen?: () => void\n}\n\nexport function SidebarToggle({\n  isOpen,\n  setIsOpen,\n}: Readonly<SidebarToggleProps>) {\n  return (\n    <div className=\"absolute z-20 visible\">\n      <p\n        className={cn(\n          \"absolute top-[80px] transition-all ease-in-out duration-500 text-[0.55rem] font-medium text-[var(--gray-9)] pb-4 pt-2 px-0 max-w-[248px] uppercase tracking-[0.15rem] truncate\",\n          isOpen === false\n            ? \"right-[76px] opacity-0\"\n            : \"-right-[142px] delay-150 opacity-100\"\n        )}\n      >\n        Explore my work\n      </p>\n      <Button\n        onClick={() => setIsOpen?.()}\n        className={cn(\n          \"h-[30px] w-[30px] max-h-[30px] top-[80px] rounded-[12px] after:rounded-[12px] transition-all ease-in-out duration-700\",\n          isOpen === false\n            ? \" -right-[13px] \"\n            : \"-right-[208px] ring-[var(--red-a5)] bg-[var(--red-a6)] hover:after:bg-[var(--red-a5)] hover:stroke-[var(--red-12)]\"\n        )}\n        variant=\"toolbar\"\n        size=\"icon\"\n      >\n        <ChevronLeft\n          className={cn(\n            \"h-5 w-5 transition-transform ease-in-out duration-700 text-[currentColor]\",\n            isOpen === false\n              ? \"absolute rotate-180\"\n              : \"fill-[var(--red-10)] stroke-[var(--red-10)] absolute rotate-0 opacity-0\"\n          )}\n        />{\" \"}\n        <X\n          className={cn(\n            \"h-5 w-5 transition-transform ease-in-out duration-700 text-[currentColor]\",\n            isOpen === false\n              ? \"absolute opacity-0 rotate-180\"\n              : \"fill-[var(--red-10)] stroke-[var(--red-10)] absolute opacity-100 rotate-0\"\n          )}\n        />\n      </Button>\n    </div>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/sidebar.tsx",
      "content": "import { motion } from \"framer-motion\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useSidebarToggle } from \"@/registry/new-york/hooks/use-sidebar-toggle\"\nimport { useStore } from \"@/registry/new-york/hooks/use-store\"\nimport { Menu } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/menu\"\nimport { SidebarToggle } from \"@/registry/new-york/prodkt/layouts/web-app-01/aside-01/sidebar-toggle\"\nimport { Logomark } from \"@/registry/new-york/prodkt/logo/logomark\"\nimport { Logotype } from \"@/registry/new-york/prodkt/logo/logotype\"\n\nexport function Sidebar() {\n  const sidebar = useStore(useSidebarToggle, (state) => state)\n\n  if (!sidebar) return null\n\n  return (\n    <motion.aside\n      layout\n      transition={{\n        opacity: { ease: \"linear\" },\n        type: \"spring\",\n        stiffness: 100,\n        layout: { duration: 0.1 },\n      }}\n      className={cn(\n        \"fixed top-0 z-[60] prodkt-aside rounded-tl-2xl rounded-bl-2xl p-0 translate-x-0 transition-[width]\",\n        sidebar?.isOpen === false ? \"w-[56px]\" : \"w-56\"\n      )}\n    >\n      <SidebarToggle isOpen={sidebar?.isOpen} setIsOpen={sidebar?.setIsOpen} />\n      <motion.div\n        layout\n        transition={{\n          opacity: { ease: \"linear\" },\n          type: \"spring\",\n          stiffness: 100,\n          layout: { duration: 0.1 },\n        }}\n        className=\"relative bottom-0 flex flex-col h-full px-0 mb-0 overflow-y-auto rounded-tl-2xl rounded-bl-2xl bg-background\"\n      >\n        <a\n          href=\"/\"\n          className={cn(\n            \"transition-transform text-[var(--ghost-a12)] hover:text-[var(--ghost-a11)] flex items-center justify-start gap-2.5 px-5 py-4\",\n            sidebar?.isOpen === false ? \"translate-x-[0]\" : \"translate-x-0\"\n          )}\n        >\n          <Logomark className=\"w-9 h-9 min-h-9 min-w-9\" />\n          <h1\n            className={cn(\n              \"whitespace-nowrap transition-[transform,opacity,display,width]\",\n              sidebar?.isOpen === false\n                ? \"-translate-x-96 opacity-0\"\n                : \"translate-x-0 opacity-100\"\n            )}\n          >\n            <Logotype\n              className={cn(\n                \"w-auto h-4 whitespace-nowrap ease-in-out duration-700 transition-[transform,opacity,display,width]\",\n                sidebar?.isOpen === false\n                  ? \"-translate-x-96 opacity-0 w-0\"\n                  : \"translate-x-0 opacity-100\"\n              )}\n            />\n          </h1>\n        </a>\n        <Menu isOpen={sidebar?.isOpen} />\n      </motion.div>\n    </motion.aside>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    },
    {
      "path": "prodkt/layouts/web-app-01/aside-01/user-nav.tsx",
      "content": "import { LayoutGrid, LogOut, User } from \"lucide-react\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/new-york/ui/avatar\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/new-york/ui/dropdown-menu\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/new-york/ui/tooltip\"\n\nexport function UserNav() {\n  return (\n    <DropdownMenu>\n      <TooltipProvider disableHoverableContent>\n        <Tooltip delayDuration={100}>\n          <TooltipTrigger asChild>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className=\"relative w-8 h-8 rounded-full\"\n              >\n                <Avatar className=\"w-8 h-8\">\n                  <AvatarImage src=\"#\" alt=\"Avatar\" />\n                  <AvatarFallback className=\"bg-transparent\">JD</AvatarFallback>\n                </Avatar>\n              </Button>\n            </DropdownMenuTrigger>\n          </TooltipTrigger>\n          <TooltipContent side=\"bottom\">Profile</TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n\n      <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n        <DropdownMenuLabel className=\"font-normal\">\n          <div className=\"flex flex-col space-y-1\">\n            <p className=\"text-sm font-medium leading-none\">John Doe</p>\n            <p className=\"text-xs leading-none text-muted-foreground\">\n              johndoe@example.com\n            </p>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem className=\"hover:cursor-pointer\" asChild>\n            <a href=\"/dashboard\" className=\"flex items-center\">\n              <LayoutGrid className=\"w-4 h-4 mr-3 text-muted-foreground\" />\n              Dashboard\n            </a>\n          </DropdownMenuItem>\n          <DropdownMenuItem className=\"hover:cursor-pointer\" asChild>\n            <a href=\"/account\" className=\"flex items-center\">\n              <User className=\"w-4 h-4 mr-3 text-muted-foreground\" />\n              Account\n            </a>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"hover:cursor-pointer\" onClick={() => {}}>\n          <LogOut className=\"w-4 h-4 mr-3 text-muted-foreground\" />\n          Sign out\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}