{
  "name": "packages-marquee",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/packages-marquee.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport {\n  useRef,\n  type DetailedHTMLProps,\n  type FC,\n  type ReactNode,\n  type SVGProps,\n} from \"react\"\nimport clsx from \"clsx\"\nimport { useInView } from \"framer-motion\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  AblyLogomark,\n  AirtableLogomark,\n  AntdLogomark,\n  AppwriteLogomark,\n  ChakraLogomark,\n  DirectusLogomark,\n  ElideGraphqlLogomark,\n  ElideLogomark,\n  FirebaseLogomark,\n  GraphqlLogomark,\n  HasuraLogomark,\n  HeadlessLogomark,\n  HookFormLogomark,\n  HygraphLogomark,\n  JSONApiLogomark,\n  KbarLogomark,\n  MantineLogomark,\n  MedusaLogomark,\n  MuiLogomark,\n  NestLogomark,\n  NestQueryLogomark,\n  NextjsLogomark,\n  RestLogomark,\n  SQLiteLogomark,\n  SanityLogomark,\n  ShadCnUILogomark,\n  StrapiLogomark,\n  SupabaseLogomark,\n  TailwindCssLogomark,\n} from \"@/registry/logos\"\n\ntype Props = {\n  className?: string\n}\n\nexport const PackagesMarquee: FC<Props> = ({ className }) => {\n  return (\n    <div className={clsx(className, \"w-full relative\")}>\n      <div className={clsx(\"not-prose\", \"w-full\", \"px-4 landing-md:px-10\")}>\n        <h2\n          className={clsx(\n            \"text-2xl landing-sm:text-[32px]\",\n            \"tracking-tight\",\n            \"text-start\",\n            \"p-0\",\n            \"text-foreground\"\n          )}\n        >\n          Start{\" \"}\n          <span\n            className={clsx(\n              \"font-semibold\",\n              \"text-primary-text drop-shadow-[0_0_30px_var(--primary-a6)]\"\n            )}\n          >\n            faster\n          </span>\n          , maintain{\" \"}\n          <span\n            className={clsx(\n              \"font-semibold\",\n              \"text-primary-text drop-shadow-[0_0_30px_var(--primary-a6)]\"\n            )}\n          >\n            easier\n          </span>\n          , manage{\" \"}\n          <span\n            className={clsx(\n              \"font-semibold\",\n              \"text-primary-text drop-shadow-[0_0_30px_var(--primary-a6)]\"\n            )}\n          >\n            complexity\n          </span>\n          .\n        </h2>\n      </div>\n\n      <div\n        className={clsx(\n          \"w-full\",\n          \"relative\",\n          \"mt-8 landing-sm:mt-12 landing-lg:mt-20\",\n          \"pb-4 landing-md:pb-10\",\n          \"bg-packages-marquee\",\n          \"border\",\n          \"rounded-2xl landing-sm:rounded-3xl\"\n        )}\n      >\n        <div\n          className={clsx(\n            \"packages-marquee-mask\",\n            \"pt-4 landing-md:pt-10 relative\"\n          )}\n        >\n          <PackagesContainer animDirection=\"right\">\n            {[...listOne, ...listOne].map(\n              ({ icon: Icon, label, tooltip }, index) => (\n                <PackageItem\n                  key={index + \"-1\"}\n                  label={label}\n                  tooltip={tooltip}\n                  icon={<Icon width=\"24\" height=\"24\" />}\n                />\n              )\n            )}\n          </PackagesContainer>\n          <PackagesContainer animDirection=\"left\">\n            {[...listTwo, ...listTwo].map(\n              ({ icon: Icon, label, tooltip }, index) => (\n                <PackageItem\n                  key={index + \"-2\"}\n                  label={label}\n                  tooltip={tooltip}\n                  icon={<Icon width=\"24\" height=\"24\" />}\n                />\n              )\n            )}\n          </PackagesContainer>\n        </div>\n\n        <div\n          className={clsx(\n            \"not-prose\",\n            \"mt-4 landing-sm:mt-6 landing-lg:mt-10\",\n            \"px-4 landing-sm:px-10\"\n          )}\n        >\n          <h6\n            className={clsx(\n              \"p-0\",\n              \"font-semibold\",\n              \"text-base landing-sm:text-2xl\",\n              \"text-foreground\"\n            )}\n          >\n            Vast platform experience\n          </h6>\n          <div\n            className={clsx(\n              \"not-prose\",\n              \"flex\",\n              \"items-center\",\n              \"justify-between\",\n              \"flex-wrap\",\n              \"gap-4 landing-sm:gap-8\"\n            )}\n          >\n            <p\n              className={clsx(\n                \"p-0\",\n                \"mt-2 landing-sm:mt-4\",\n                \"text-base\",\n                \"text-muted\"\n              )}\n            >\n              I dig exploring new technologies and building products with them.\n            </p>\n            <Button variant=\"outline\" size=\"sm\">\n              All technologies\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PackagesContainer = ({\n  children,\n  className,\n  animDirection,\n  ...props\n}: DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n  animDirection: \"left\" | \"right\"\n}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const inView = useInView(ref)\n\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        \"relative\",\n        \"flex\",\n        \"items-center\",\n        animDirection === \"left\" ? \"justify-start\" : \"justify-end\"\n      )}\n    >\n      <div\n        className={clsx(\n          className,\n          \"hover:animation-paused\",\n          inView\n            ? animDirection === \"left\"\n              ? \"animate-packages-marquee-left\"\n              : \"animate-packages-marquee-right\"\n            : \"\",\n          \"left-0\",\n          \"top-0\",\n          \"pr-4\",\n          \"w-auto\",\n          \"flex\",\n          \"items-center\",\n          \"gap-[18px]\",\n          \"mt-6\"\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nconst PackageItem = (props: {\n  icon: ReactNode\n  label: string\n  tooltip: string\n}) => {\n  const { tooltip, icon, label } = props\n\n  return (\n    <div\n      className={clsx(\n        \"group/item\",\n        \"relative\",\n        \"z-10\",\n        \"flex\",\n        \"items-center\",\n        \"justify-center\",\n        \"gap-3\",\n        \"pl-4 pt-4 pb-4 pr-6\",\n        \"bg-popover\",\n        \"outline outline-1 outline-ring-disabled -outline-offset-2 border border-border-disabled ring-2 ring-offset-1 ring-offset-ring-disabled ring-inset ring-ring-disabled\",\n        \"rounded-full\",\n        \"cursor-pointer\"\n      )}\n    >\n      <div>{icon}</div>\n      <div\n        className={clsx(\n          \"text-sm\",\n          \"font-medium\",\n          \"bg-packages-marquee-text\",\n          \"bg-clip-text\",\n          \"text-transparent\",\n          \"whitespace-nowrap\"\n        )}\n      >\n        {label}\n      </div>\n\n      <div\n        className={clsx(\n          \"absolute\",\n          \"z-20\",\n          \"top-[-48px]\",\n          \"scale-0\",\n          \"group-hover/item:scale-100\", // Change from group-hover to peer-hover\n          \"transition-transform\",\n          \"origin-top\"\n        )}\n      >\n        <div\n          className={clsx(\n            \"relative\",\n            \"text-sm\",\n            \"bg-foreground\",\n            \"border-0\",\n            \"text-background\",\n            \"rounded-full\",\n            \"px-6\",\n            \"py-3\",\n            \"whitespace-nowrap\"\n          )}\n        >\n          {tooltip}\n        </div>\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={40}\n          height={15}\n          fill=\"none\"\n          className={clsx(\n            \"absolute\",\n            \"scale-0\",\n            \"-bottom-2\",\n            \"left-1/2\",\n            \"-translate-x-1/2\",\n            \"group-hover/item:scale-100\", // Change from group-hover to peer-hover\n            \"transition-transform\",\n            \"origin-bottom\",\n            \"text-foreground\",\n            \"opacity-0\",\n            \"group-hover/item:opacity-100\", // Change from group-hover to peer-hover\n            \"group-hover/item:gradientMask-to-b-40\" // Change from group-hover to peer-hover\n          )}\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M17.73 13.664C18.238 14.5 19.089 15 20 15c.912 0 1.763-.501 2.27-1.336l3.025-4.992C26.306 7.002 28.01 7 29.833 7H40V0H0v7h10.167c1.823 0 3.527.003 4.538 1.672l3.026 4.992Z\"\n          />\n        </svg>\n      </div>\n    </div>\n  )\n}\n\nconst listOne = [\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <FirebaseLogomark {...props} />,\n    label: \"Firebase\",\n    tooltip: \"npm i refine-firebase\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AblyLogomark {...props} />,\n    label: \"Ably\",\n    tooltip: \"npm i @prodkt/ably\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AirtableLogomark {...props} />,\n    label: \"Airtable\",\n    tooltip: \"npm i @prodkt/airtable\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AppwriteLogomark {...props} />,\n    label: \"Appwrite\",\n    tooltip: \"npm i @prodkt/appwrite\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <DirectusLogomark {...props} />,\n    label: \"Directus\",\n    tooltip: \"npm i @tspvivek/refine-directus\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <ElideLogomark {...props} />,\n    label: \"Elide\",\n    tooltip: \"npm i elide-simple-rest\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => (\n      <ElideGraphqlLogomark {...props} />\n    ),\n    label: \"Elide GraphQL\",\n    tooltip: \"npm i elide-simple-graphql\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <HasuraLogomark {...props} />,\n    label: \"Hasura\",\n    tooltip: \"npm i @prodkt/hasura\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <HookFormLogomark {...props} />,\n    label: \"Hook Form\",\n    tooltip: \"npm i @prodkt/react-hook-form\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AntdLogomark {...props} />,\n    label: \"Ant Design\",\n    tooltip: \"npm i @prodkt/antd\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <MuiLogomark {...props} />,\n    label: \"Material UI\",\n    tooltip: \"npm i @prodkt/mui\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <MantineLogomark {...props} />,\n    label: \"Mantine\",\n    tooltip: \"npm i @prodkt/mantine\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <ChakraLogomark {...props} />,\n    label: \"Chakra UI\",\n    tooltip: \"npm i @prodkt/chakra-ui\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <ShadCnUILogomark {...props} />,\n    label: \"shadcn/ui\",\n    tooltip: \"npx sparkstack-ui init\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => (\n      <TailwindCssLogomark {...props} />\n    ),\n    label: \"Tailwind CSS\",\n    tooltip: \"npx tailwindcss init\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <HeadlessLogomark {...props} />,\n    label: \"Headless UI\",\n    tooltip: \"npm i @headlessui/react\",\n  },\n]\n\nconst listTwo = [\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <GraphqlLogomark {...props} />,\n    label: \"GraphQL\",\n    tooltip: \"npm i @prodkt/graphql\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <KbarLogomark {...props} />,\n    label: \"Kbar\",\n    tooltip: \"npm i @prodkt/kbar\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <MedusaLogomark {...props} />,\n    label: \"Medusa\",\n    tooltip: \"npm i @prodkt/medusa\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <NestLogomark {...props} />,\n    label: \"NestJS CRUD\",\n    tooltip: \"npm i @prodkt/nestjsx-crud\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <NestQueryLogomark {...props} />,\n    label: \"Nestjs-query\",\n    tooltip: \"npm i @prodkt/nestjs-query\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <NextjsLogomark {...props} />,\n    label: \"Next.js\",\n    tooltip: \"npm i @prodkt/nextjs-router\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <RestLogomark {...props} />,\n    label: \"REST\",\n    tooltip: \"npm i @prodkt/simple-rest\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <StrapiLogomark {...props} />,\n    label: \"Strapi\",\n    tooltip: \"npm i @prodkt/strapi-v4\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <SupabaseLogomark {...props} />,\n    label: \"Supabase\",\n    tooltip: \"npm i @prodkt/supabase\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <HygraphLogomark {...props} />,\n    label: \"Hygraph\",\n    tooltip: \"npm i @acomagu/refine-hygraph\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <SanityLogomark {...props} />,\n    label: \"Sanity\",\n    tooltip: \"npm i refine-sanity\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <SQLiteLogomark {...props} />,\n    label: \"SQLite\",\n    tooltip: \"npm i refine-sqlite\",\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <JSONApiLogomark {...props} />,\n    label: \"JSON:API\",\n    tooltip: \"npm i refine-jsonapi\",\n  },\n]\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}