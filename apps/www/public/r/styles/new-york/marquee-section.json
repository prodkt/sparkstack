{
  "name": "marquee-section",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/marquee-section.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport {\n  useRef,\n  type DetailedHTMLProps,\n  type ReactNode,\n  type SVGProps,\n} from \"react\"\nimport clsx from \"clsx\"\nimport { useInView } from \"framer-motion\"\n\nimport {\n  AtlassianLogomark,\n  Auth0Logomark,\n  AuthJsLogomark,\n  AwsCognitoLogomark,\n  AzureActiveDirectoryLogomark,\n  ClerkLogomark,\n  ExpoLogomark,\n  GoogleLogomark,\n  OktaLogomark,\n} from \"@/registry/logos\"\n\nexport const MarqueeSection = ({ className }: { className?: string }) => {\n  return (\n    <div\n      className={clsx(\n        \"flex flex-col\",\n        \"not-prose\",\n        \"w-full\",\n        \"border bg-marquee-section\",\n        \"rounded-2xl landing-sm:rounded-3xl\",\n        \"p-4 landing-sm:p-10\",\n        className\n      )}\n    >\n      <div\n        className={clsx(\"flex flex-col\", \"gap-2 landing-sm:gap-4\", \"not-prose\")}\n      >\n        <h2\n          className={clsx(\n            \"text-base landing-sm:text-2xl\",\n            \"text-foreground\",\n            \"font-semibold\"\n          )}\n        >\n          Sparkstack from Prodkt & Bryan Funk\n        </h2>\n        <p className={clsx(\"text-base\", \"max-w-[752px]\", \"text-muted-text\")}>\n          Official packages I have first hand experience&apos;s with as it\n          pertains to{\" \"}\n          <span className={clsx(\"text-foreground\")}>\n            identity and access management providers\n          </span>\n          . These modules eliminate the need for days of manual work in\n          developing custom authentication providers, allowing you to seamlessly\n          integrate your application while following all security best\n          practices.\n        </p>\n      </div>\n\n      <div\n        className={clsx(\n          \"marquee-section-mask\",\n          \"mt-4 landing-md:mt-10 -mx-4 md:-mx-10\",\n          \"overflow-hidden\"\n        )}\n      >\n        <PackagesContainer animDirection=\"right\">\n          {[...list, ...list].map(({ icon: Icon, label, tooltip }, index) => (\n            <PackageItem\n              key={index}\n              label={label}\n              tooltip={tooltip}\n              icon={<Icon width=\"24\" height=\"24\" />}\n            />\n          ))}\n        </PackagesContainer>\n      </div>\n    </div>\n  )\n}\n\nconst PackagesContainer = ({\n  children,\n  className,\n  animDirection,\n  ...props\n}: DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n  animDirection: \"left\" | \"right\"\n}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const inView = useInView(ref)\n\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        \"relative\",\n        \"flex\",\n        \"items-center\",\n        animDirection === \"left\" ? \"justify-start\" : \"justify-end\"\n      )}\n    >\n      <div\n        className={clsx(\n          className,\n          \"hover:animation-paused\",\n          inView\n            ? animDirection === \"left\"\n              ? \"animate-marquee-section-left\"\n              : \"animate-marquee-section-right\"\n            : \"\",\n          \"absolute\",\n          \"left-0\",\n          \"top-0\",\n          \"pr-4\",\n          \"w-auto\",\n          \"flex\",\n          \"items-center\",\n          \"gap-[18px]\",\n          \"mt-6\",\n          \"relative\"\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nconst PackageItem = (props: {\n  icon: ReactNode\n  label: string\n  tooltip: string | null\n}) => {\n  const { tooltip, icon, label } = props\n\n  return (\n    <div\n      className={clsx(\n        \"group\",\n        \"relative\",\n        \"z-10\",\n        \"flex\",\n        \"items-center\",\n        \"justify-center\",\n        \"gap-3\",\n        \"bg-popover\",\n        \"outline outline-1 outline-ring-disabled -outline-offset-2 border border-border-disabled ring-2 ring-offset-1 ring-offset-ring-disabled ring-inset ring-ring-disabled\",\n        \"pl-4 pt-4 pb-4 pr-6\",\n        \"backdrop-blur\",\n        \"rounded-full\",\n        \"cursor-pointer\"\n      )}\n    >\n      <div>{icon}</div>\n      <div\n        className={clsx(\n          \"text-sm\",\n          \"font-medium\",\n          \"bg-marquee-section-text\",\n          \"bg-clip-text\",\n          \"text-transparent\",\n          \"whitespace-nowrap\"\n        )}\n      >\n        {label}\n      </div>\n\n      {tooltip && (\n        <div\n          className={clsx(\n            \"absolute\",\n            \"z-20\",\n            \"top-[-48px]\",\n            \"scale-0\",\n            \"group-hover:scale-100\",\n            \"transition-transform\",\n            \"origin-top\"\n          )}\n        >\n          <div\n            className={clsx(\n              \"relative\",\n              \"text-sm\",\n              \"bg-background\",\n              \"text-foreground\",\n              \"rounded-full\",\n              \"px-6\",\n              \"py-3\",\n              \"whitespace-nowrap\"\n            )}\n          >\n            {tooltip}\n          </div>\n\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={40}\n            height={15}\n            fill=\"none\"\n            className={clsx(\n              \"absolute\",\n              \"scale-0\",\n              \"-bottom-2\",\n              \"left-1/2\",\n              \"-translate-x-1/2\",\n              \"group-hover:scale-100\",\n              \"transition-transform\",\n              \"origin-bottom\",\n              \"text-foreground\"\n            )}\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M17.73 13.664C18.238 14.5 19.089 15 20 15c.912 0 1.763-.501 2.27-1.336l3.025-4.992C26.306 7.002 28.01 7 29.833 7H40V0H0v7h10.167c1.823 0 3.527.003 4.538 1.672l3.026 4.992Z\"\n            />\n          </svg>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst list = [\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AwsCognitoLogomark {...props} />,\n    label: \"AWS Cognito\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <Auth0Logomark {...props} />,\n    label: \"Auth0\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => (\n      <AzureActiveDirectoryLogomark {...props} />\n    ),\n    label: \"Azure Active Directory\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <OktaLogomark {...props} />,\n    label: \"Okta\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <ClerkLogomark {...props} />,\n    label: \"Clerk\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AtlassianLogomark {...props} />,\n    label: \"Atlassian\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <GoogleLogomark {...props} />,\n    label: \"Google Auth\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <AuthJsLogomark {...props} />,\n    label: \"Auth.js\",\n    tooltip: null,\n  },\n  {\n    icon: (props: SVGProps<SVGSVGElement>) => <ExpoLogomark {...props} />,\n    label: \"Expo\",\n    tooltip: null,\n  },\n] as const\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}