{
  "name": "fade-in",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/motion/fade-in.tsx",
      "content": "\"use client\"\n\nimport { createContext, useContext } from \"react\"\nimport { motion, useReducedMotion, type HTMLMotionProps } from \"framer-motion\"\n\nconst FadeInStaggerContext = createContext(false)\n\nconst viewport = { once: true, margin: \"0px 0px 600px 0px\" }\n\ninterface FadeInProps\n  extends React.ComponentPropsWithoutRef<typeof motion.div> {}\n\ninterface FadeInProps extends HTMLMotionProps<\"div\"> {}\n\nexport function FadeIn(props: FadeInProps) {\n  const shouldReduceMotion = useReducedMotion()\n  const isInStaggerGroup = useContext(FadeInStaggerContext)\n\n  return (\n    <motion.div\n      variants={{\n        hidden: { opacity: 0, y: shouldReduceMotion ? 0 : 24 },\n        visible: { opacity: 1, y: 0 },\n      }}\n      transition={{ duration: 1 }}\n      {...(isInStaggerGroup\n        ? {}\n        : {\n            initial: \"hidden\",\n            whileInView: \"visible\",\n            viewport,\n          })}\n      {...props}\n    />\n  )\n}\n\ninterface FadeInStaggerProps\n  extends React.ComponentPropsWithoutRef<typeof motion.div> {\n  faster?: boolean\n}\n\nexport function FadeInStagger({\n  faster = false,\n  ...props\n}: Readonly<FadeInStaggerProps>) {\n  return (\n    <FadeInStaggerContext.Provider value={true}>\n      <motion.div\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={viewport}\n        transition={{ staggerChildren: faster ? 0.12 : 0.2 }}\n        {...props}\n      />\n    </FadeInStaggerContext.Provider>\n  )\n}\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}