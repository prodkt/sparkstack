{
  "name": "creative-tab-slider",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/creative-tab-slider.tsx",
      "content": "\"use client\"\n\nimport React, { useEffect, useRef, useState, type FC } from \"react\"\nimport clsx from \"clsx\"\nimport { AnimatePresence, motion, useInView } from \"framer-motion\"\nimport {\n  Fingerprint as AuthenticationIcon,\n  BarChart as ChartsIcon,\n  PenIcon as DataTablesIcon,\n  Table as FormsIcon,\n  List as ListIcon,\n  Award as WizardsIcon,\n} from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\n\ntype Props = {\n  className?: string\n}\n\nexport const CreativeTabSlider: FC<Props> = ({ className }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const inView = useInView(ref)\n\n  const [activeIndex, setActiveIndex] = useState(0)\n  const activeListItem = list[activeIndex]\n\n  const [shouldIncrement, setShouldIncrement] = useState(true)\n\n  useEffect(() => {\n    if (!shouldIncrement) {\n      return\n    }\n\n    let interval: NodeJS.Timeout\n    if (inView) {\n      interval = setInterval(() => {\n        setActiveIndex((prev) => (prev + 1) % list.length)\n      }, 3000)\n    }\n\n    return () => clearInterval(interval)\n  }, [shouldIncrement, inView])\n\n  return (\n    <div ref={ref} className={clsx(className, \"w-full\")}>\n      <div className={clsx(\"not-prose\", \"w-full\", \"px-4 landing-md:px-10\")}>\n        <h2\n          className={clsx(\n            \"text-2xl landing-sm:text-[32px]\",\n            \"tracking-tight\",\n            \"text-start\",\n            \"p-0\",\n            \"text-foreground\"\n          )}\n        >\n          I love{\" \"}\n          <span\n            className={clsx(\n              \"font-semibold\",\n              \"text-primary-text drop-shadow-[0_0_30px_var(--primary-a9)]\"\n            )}\n          >\n            bleeding edge\n          </span>{\" \"}\n          technology. Anything between low-code and full-code to design\n          primitives and complete design systems.\n        </h2>\n        <p\n          className={clsx(\n            \"mt-4 landing-sm:mt-6\",\n            \"max-w-md\",\n            \"text-base\",\n            \"text-muted\"\n          )}\n        >\n          In my exploration I've started crafting and coding my own tools to\n          make the learning process more efficient and always have an outcome.\n        </p>\n      </div>\n\n      <div className={clsx(\"mt-8 landing-sm:mt-12 landing-lg:mt-20\")}>\n        <div\n          className={clsx(\n            \"select-none\",\n            \"relative ring-1 ring-gray-a3 ring-offset-2 ring-offset-gray-a1 outline outline-1 outline-gray-a3 border border-active outline-offset-2 bg-gray-a2\",\n            \"h-[752px] landing-sm:h-[874px] landing-md:h-[984px] landing-lg:h-[688px]\",\n            \"not-prose\",\n            \"pt-4 landing-sm:pt-10 landing-lg:pt-20\",\n            \"pb-4 landing-lg:pb-0\",\n            \"pl-4 landing-sm:pl-10\",\n            \"text-foreground\",\n            \"rounded-2xl landing-sm:rounded-3xl\",\n            \"overflow-hidden\",\n            \"bg-card\",\n            \"bg-noise\"\n          )}\n        >\n          <AnimatePresence>\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{\n                duration: 0.5,\n                ease: \"easeInOut\",\n              }}\n              key={activeIndex}\n              className={clsx(\n                \"absolute\",\n                \"inset-0\",\n                \"z-0\",\n                \"landing-xs:bg-creative-tab-slider-glow-position-xs\",\n                \"landing-lg:bg-creative-tab-slider-glow-position-lg\",\n                \"landing-md:bg-creative-tab-slider-glow-position-md\",\n                \"landing-xs:bg-creative-tab-slider-glow-size-xs\",\n                \"landing-lg:bg-creative-tab-slider-glow-size-lg\",\n                activeListItem.backgroundImage\n              )}\n              style={{\n                backgroundRepeat: \"repeat, no-repeat\",\n              }}\n            />\n          </AnimatePresence>\n          <div\n            className={clsx(\n              \"relative\",\n              \"z-[1]\",\n              \"h-full w-full\",\n              \"flex flex-col justify-start items-start landing-lg:grid landing-lg:grid-cols-12\"\n            )}\n          >\n            <div\n              className={clsx(\n                \"not-prose\",\n                \"w-full\",\n                \"relative\",\n                \"pr-6 landing-sm:pr-0\",\n                \"landing-sm:max-w-[540px] landing-md:max-w-[760px] landing-lg:max-w-[416px]\",\n                \"landing-lg:col-span-5\",\n                \"landing-lg:mt-16\"\n              )}\n            >\n              <h3\n                className={clsx(\n                  \"text-base landing-sm:text-xl font-semibold\",\n                  \"text-foreground\"\n                )}\n              >\n                {activeListItem.title}\n              </h3>\n              <p className={clsx(\"mt-6\", \"text-base\", \"text-muted\")}>\n                {activeListItem.description}\n              </p>\n              <div\n                className={clsx(\n                  \"mt-4 landing-sm:mt-10\",\n                  \"justify-start\",\n                  \"items-start\",\n                  \"max-w-max\",\n                  \"flex flex-wrap\",\n                  \"flex-row\",\n                  \"w-auto\",\n                  \"gap-y-2\",\n                  \"landing-sm:gap-2\",\n                  \"not-prose\"\n                )}\n              >\n                {list.map((item, index) => {\n                  const active = index === activeIndex\n                  const Icon = item.icon\n\n                  return (\n                    <Button\n                      variant=\"dashed\"\n                      size=\"sm\"\n                      key={item.iconText}\n                      onClick={() => {\n                        setShouldIncrement(false)\n                        setActiveIndex(index)\n                      }}\n                      className={clsx(\n                        \"appearance-none shadow-[0_-2px_10px_-1px_var(--gray-a3),inset_0_-2px_1px_-1px_var(--gray-1)] !bg-gray-1 border-gray-a5 outline-offset-4 outline outline-1 outline-transparent transition-all duration-100\",\n                        \"focus:outline-none\",\n                        \"cursor-pointer\",\n                        \"mr-auto\",\n                        active\n                          ? \" shadow-[inset_0_-2px_10px_-1px_var(--gray-1),inset_0_-14px_24px_-24px_var(--gray-a2)] !bg-gray-a2 border-gray-a4 ring-1 ring-gray-a7 border-solid outline-offset-2 !outline-gray-a2 outline outline-2\"\n                          : \"bg-gray-a2\",\n\n                        \"w-max\"\n                      )}\n                    >\n                      <div>\n                        <Icon active={active} />\n                      </div>\n                      <div className={clsx(active ? \"\" : \"\")}>\n                        {item.iconText}\n                      </div>\n                    </Button>\n                  )\n                })}\n              </div>\n            </div>\n            <div\n              className={clsx(\n                \"relative\",\n                \"h-full\",\n                \"mt-4 landing-sm:mt-[72px] landing-lg:mt-0\",\n                \"flex\",\n                \"landing-lg:col-start-7 landing-lg:col-end-13\"\n              )}\n            >\n              <div\n                className={clsx(\n                  \"w-full\",\n                  \"h-full\",\n                  \"creative-tab-slider-mask\",\n                  \"z-[1]\",\n                  \"landing-lg:absolute\",\n                  \"top-0 right-0\"\n                )}\n              >\n                {list.map((item, index) => {\n                  const active = index === activeIndex\n\n                  return (\n                    <div\n                      key={index}\n                      className={clsx(\n                        \"after:absolute\",\n                        \"after:inset-0\",\n                        \"after:bg-transparent\",\n                        \"after:rounded-l-3xl\",\n                        \"after:z-[50]\",\n                        \"after:overflow-hidden before:overflow-hidden\",\n                        \"after:border after:border-gray-a6 after:border-r-0\",\n                        \"after:shadow-[-1px_0_0_4px_var(--gray-a4),-1px_0_0_2px_var(--gray-1)]\",\n                        \"after:size-full\",\n                        \"after:m-0\",\n                        \"rounded-l-3xl\",\n                        \"object-cover\",\n                        \"object-left-top\",\n                        \"w-full landing-md:w-[954px] landing-lg:w-full\",\n                        \"h-full landing-lg:h-[506px]\",\n                        \"landing-md:pl-20 landing-lg:pl-0\",\n                        \"absolute\",\n                        \"top-0 right-0\",\n                        active && \"delay-300\",\n                        active ? \"translate-x-0\" : \"translate-x-full\",\n                        active ? \"opacity-100\" : \"opacity-0\",\n                        \"transition-[transform,opacity] duration-500 ease-in-out\"\n                      )}\n                    >\n                      <img\n                        key={index}\n                        src={item.image1Dark}\n                        alt=\"UI of Prodkt\"\n                        className={clsx(\n                          \"z-10\",\n                          \"relative\",\n                          \"rounded-l-3xl\",\n                          \"object-cover\",\n                          \"object-left-top\",\n                          \"w-full landing-md:w-[954px] landing-lg:w-full\",\n                          \"h-full landing-lg:h-[506px]\",\n                          \"landing-md:pl-20 landing-lg:pl-0\",\n                          \"top-0 right-0\",\n                          // active && \"delay-300\",\n                          active ? \"translate-x-0\" : \"translate-x-full\",\n                          active ? \"opacity-100\" : \"opacity-0\",\n                          \"transition-[transform,opacity] duration-500 ease-in-out\"\n                        )}\n                      />\n                    </div>\n                  )\n                })}\n              </div>\n\n              {list.map((item, index) => {\n                const active = index === activeIndex\n\n                return (\n                  <div\n                    key={index}\n                    className={clsx(\n                      \"block\",\n                      \"z-[2]\",\n                      \"w-[328px] landing-sm:w-[488px]\",\n                      \"absolute\",\n                      \"bottom-0 landing-sm:bottom-[4px] landing-lg:bottom-[78px]\",\n                      \"-left-2 landing-lg:-left-20\",\n                      \"rounded-xl\",\n                      \"text-foreground backdrop-blur\",\n                      \"shadow-creative-tab-slider-code\",\n                      active && \"delay-300\",\n                      active ? \"translate-y-0\" : \"translate-y-full\",\n                      active ? \"opacity-100\" : \"opacity-0\",\n                      \"transition-[transform,opacity] duration-500 ease-in-out\"\n                    )}\n                  >\n                    <img\n                      src={item.image2Dark}\n                      alt=\"Code of Prodkt\"\n                      className={clsx(\"rounded-xl\", \"w-full\", \"h-full\")}\n                    />\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst list = [\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\n        state management. Let Refine automatically transform\n        your UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <DataTablesIcon\n        className={clsx(\n          props.active ? \"dark:text-[#FA3852] text-[#D22D2D]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"Tables\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_2.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_3.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-cyan-dark bg-creative-tab-slider-glow-cyan-light\",\n  },\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\n      state management. Let Refine automatically transform\n      your UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <ListIcon\n        className={clsx(\n          props.active ? \"dark:text-[#F98C1F] text-[#F46A25]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"List\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_4.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_6.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-orange-dark bg-creative-tab-slider-glow-orange-light\",\n  },\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\nstate management. Let Refine automatically transform\nyour UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <ChartsIcon\n        className={clsx(\n          props.active ? \"dark:text-[#F9D51F] text-[#FF9F1A]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"Charts\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_2.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_3.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-yellow-dark bg-creative-tab-slider-glow-yellow-light\",\n  },\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\n  state management. Let Refine automatically transform\n  your UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <FormsIcon\n        className={clsx(\n          props.active ? \"dark:text-[#47D1BF] text-[#089191]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"Forms\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_2.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_3.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-cyan-dark bg-creative-tab-slider-glow-cyan-light\",\n  },\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\n  state management. Let Refine automatically transform\n  your UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <WizardsIcon\n        className={clsx(\n          props.active ? \"dark:text-[#3DB8F5] text-[#1F80E0]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"Wizards\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_2.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_3.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-blue-dark bg-creative-tab-slider-glow-blue-light\",\n  },\n  {\n    title:\n      \"Business applications not only share fundamental UI elements, but also the underlying logic.\",\n    description: `Stop writing repetitive code for CRUD, security and\n  state management. Let Refine automatically transform\n  your UI elements to enterprise-grade:`,\n    icon: (props: { active: boolean }) => (\n      <AuthenticationIcon\n        className={clsx(\n          props.active ? \"dark:text-[#5959FF] text-[#693BC6]\" : \"text-gray-500\"\n        )}\n      />\n    ),\n    iconText: \"Auth\",\n    image1Dark: \"/sparkstack/prodktCraft_appScreenshot_2.avif\",\n    image2Dark: \"/sparkstack/prodktCraft_appScreenshot_3.avif\",\n    backgroundImage:\n      \"dark:bg-creative-tab-slider-glow-indigo-dark bg-creative-tab-slider-glow-indigo-light\",\n  },\n]\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}