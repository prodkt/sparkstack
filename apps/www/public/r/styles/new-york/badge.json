{
  "name": "badge",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        solid:\n          \"border-[var(--gray-a2)] group-hover:border-[var(--gray-a4)] bg-[var(--gray-3)] group-hover:bg-[var(--gray-1)] border no-underline hover:no-underline decoration-0 hover:decoration-0 group-hover:no-underline decoration-transparent hover:decoration-transparent\",\n        ghost:\n          \"border-[var(--ghost-a2)] hover:border-[var(--ghost-a4)] hover:bg-[var(--ghost-a4)] border no-underline hover:no-underline decoration-0 hover:decoration-0 group-hover:no-underline decoration-transparent hover:decoration-transparent\",\n        crimson:\n          \"border-[var(--crimson-a3)] bg-[var(--crimson-a2)] text-[var(--crimson-a8)] shadow hover:bg-[var(--crimson-a2)] no-underline hover:no-underline decoration-0 hover:decoration-0 group-hover:no-underline decoration-transparent hover:decoration-transparent\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}