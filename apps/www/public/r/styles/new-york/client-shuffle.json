{
  "name": "client-shuffle",
  "type": "registry:prodkt",
  "files": [
    {
      "path": "prodkt/client-shuffle.tsx",
      "content": "\"use client\"\n\nimport React, { useEffect, useLayoutEffect, useRef, type FC } from \"react\"\nimport clsx from \"clsx\"\nimport { useInView } from \"framer-motion\"\n\nimport {\n  CiscoLogo,\n  CocaColaLogo,\n  DominosLogo,\n  EminemLogo,\n  HellsAngelsLogo2,\n  HmLogo,\n  NexsaleLogo,\n  RevolutionVodkaLogo,\n  SamsungLogo,\n  ShadyLogo,\n  ToyotaLogo,\n  TruwhipLogo,\n} from \"@/registry/logos\"\n\ntype Props = {\n  className?: string\n}\n\nexport const ClientShuffle: FC<Props> = ({ className }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const inView = useInView(ref)\n\n  const lastChangedIndex = React.useRef<number>(0)\n\n  const [randomIcons, setRandomIcons] = React.useState<IList>([])\n\n  useLayoutEffect(() => {\n    setRandomIcons(list.sort(() => 0.5 - Math.random()).slice(0, 6))\n  }, [])\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout\n    // change one random icon in the list every X seconds.\n    if (inView) {\n      interval = setInterval(() => {\n        setRandomIcons((prev) => {\n          const { changedIndex, newList } = changeOneRandomIcon(\n            prev,\n            list,\n            lastChangedIndex.current\n          )\n          lastChangedIndex.current = changedIndex\n          return newList\n        })\n      }, 2000)\n    }\n\n    return () => clearInterval(interval)\n  }, [randomIcons, inView])\n\n  return (\n    <div className={clsx(className, \"w-full\")} ref={ref}>\n      <div\n        className={clsx(\n          \"not-prose\",\n          \"relative\",\n          \"flex flex-col\",\n          \"items-center\",\n          \"justify-center\",\n          \"w-auto\",\n          \"mx-auto\",\n          \"space-y-5 md:space-y-3\",\n          \"text-center\",\n          \"text-muted\",\n          \"rounded-2xl landing-sm:rounded-3xl\"\n        )}\n      >\n        <p\n          className={clsx(\n            \"whitespace-nowrap\",\n            \"text-xs landing-sm:text-sm uppercase tracking-widest font-mono mt-2 mb-0\",\n            \"text-muted\"\n          )}\n        >\n          Trusted by companies like\n        </p>\n        <div\n          className={clsx(\n            \"flex flex-row flex-wrap\",\n            \"w-full\",\n            \"justify-center\",\n            \"items-center\",\n            \"text-balance\"\n          )}\n        >\n          {randomIcons.map((item) => (\n            <div\n              key={item.id}\n              className={clsx(\n                \"w-auto\",\n                \"px-1\",\n                \"py-0\",\n                \"text-foreground\",\n                \"object-contain\",\n                \"flex-wrap md:flex-nowrap\",\n                \"lg:basis-1/6\",\n                \"landing-xs:basis-2/6\",\n                \"max-h-[60px]\",\n                \"basis-full\",\n                \"justify-center\",\n                \"items-center\",\n                \"flex auto-cols-max grid-flow-row auto-rows-max grid-cols-4\",\n                \"overflow-hidden\"\n              )}\n            >\n              <div\n                className={clsx(\n                  \"animate-opacity-reveal\",\n                  \"max-h-[60px]\",\n                  \"max-h-[24px]\",\n                  \"landing-sm:max-w-[156px]\",\n                  \"landing-xs:max-w-[100px]\",\n                  \"flex\",\n                  \"shrink\",\n                  \"grow-0\",\n                  \"basis-full\",\n                  \"object-contain\",\n                  \"justify-center\",\n                  \"items-center\"\n                )}\n              >\n                {item.icon}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// change only one random icon in the list\nconst changeOneRandomIcon = (\n  currentList: IList,\n  list: IList,\n  lastChangedIndex: number\n): { newList: IList; changedIndex: number } => {\n  const newList = [...currentList]\n\n  // pick randomIndex from the current list\n  let randomIndex = Math.floor(Math.random() * newList.length)\n  // if the randomIndex is the same as the last changed index, pick another randomIndex\n  while (randomIndex === lastChangedIndex) {\n    randomIndex = Math.floor(Math.random() * newList.length)\n  }\n\n  // pick randomIcon from the list\n  let randomIcon = list[Math.floor(Math.random() * list.length)]\n  // check if the randomIcon is already in the current list\n  let isExist = newList.find((item) => item.id === randomIcon.id)\n  // if the randomIcon is already in the current list, pick another randomIcon\n  while (isExist) {\n    randomIcon = list[Math.floor(Math.random() * list.length)]\n    isExist = newList.find((item) => item.id === randomIcon.id)\n  }\n\n  // change the randomIcon in the current list\n  newList[randomIndex] = randomIcon\n\n  return { newList, changedIndex: randomIndex }\n}\n\ntype IList = {\n  icon: React.ReactNode\n  id: number\n}[]\n\nconst list: IList = [\n  {\n    icon: (\n      <EminemLogo className=\"h-auto max-h-[16px] w-auto max-w-full object-contain\" />\n    ),\n    id: 1,\n  },\n  {\n    icon: (\n      <RevolutionVodkaLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 2,\n  },\n  {\n    icon: (\n      <HellsAngelsLogo2 className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 3,\n  },\n  {\n    icon: (\n      <DominosLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 4,\n  },\n  {\n    icon: (\n      <ShadyLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 5,\n  },\n  {\n    icon: (\n      <HmLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 7,\n  },\n  {\n    icon: (\n      <CiscoLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 8,\n  },\n  {\n    icon: (\n      <ToyotaLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 9,\n  },\n  {\n    icon: (\n      <SamsungLogo className=\"h-auto max-h-[16px] w-auto max-w-full object-contain\" />\n    ),\n    id: 10,\n  },\n  {\n    icon: (\n      <TruwhipLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 11,\n  },\n  {\n    icon: (\n      <NexsaleLogo className=\"h-auto max-h-[16px] w-auto max-w-full object-contain\" />\n    ),\n    id: 12,\n  },\n  {\n    icon: (\n      <CocaColaLogo className=\"h-auto max-h-[24px] w-auto max-w-full object-contain\" />\n    ),\n    id: 13,\n  },\n]\n",
      "type": "registry:prodkt",
      "target": ""
    }
  ]
}